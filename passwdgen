#!/usr/bin/perl -w

# Mon Nov  5 13:42:46 MET 2007
(my $email='pflanze%gmx,ch')=~ tr/%,/@./;

use strict;

our $length_in_bytes= 5;

my $_length_in_bits= $length_in_bytes*8;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname [length_in_bytes]

  Generate password of length_in_bytes of randomness/entropy(?)/data
  (by default, $length_in_bytes bytes ($_length_in_bits bits)).

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

my @args;
my $DEBUG=0;
for (my $i=0; $i<=$#ARGV; $i++) {
    local $_=$ARGV[$i];
    if (/^--?h(elp)?$/) {
    	usage
    } elsif ($_ eq '--') {
    	push @args, @ARGV[$i+1..$#ARGV];
    	last;
    } elsif (/^--?d(ebug)?$/) {
	$DEBUG=1;
#     } elsif (/^--?X(?:XXX(?:=(.*))?)?$/) {
#         if (defined $1) {
#             $XXX=$1
#         } else {
#             $XXX=$ARGV[++$i] or usage "missing argument for '$_' option";
#         }
    } elsif (/^-./) {
    	usage("Unknown option '$_'\n");
    } else {
    	push @args, $_
    }
}
usage if @args>1;
if (@args) {
    ($length_in_bytes)=@args
}

use Chj::Random::Formatted 'random_passwd_string';

print random_passwd_string ($length_in_bytes),"\n"
  or die $!;

close STDOUT
  or die $!;

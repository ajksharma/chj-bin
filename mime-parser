#!/usr/bin/perl -w

# Fre Aug  6 01:30:02 MEST 2004
(my $email='XXX%YYY,ch')=~ tr/%,/@./;

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?"; 
my ($mydir, $myname)=($1,$2); 
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname [file(s)]
  or stdin.
  Options:
  -h headername   print header value(s?)
  --last-header headername
                  print the header appearing last in the head text
                  (but might be the one having been added to the head
                  as the first in time)

  (Christian Jaeger <$email>)
";
exit @_ ? 1 : 0;
}

use Getopt::Long;
our $verbose=0;
our ($opt_h,$opt_last_header);
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   "h|headers=s" => \$opt_h,
	   "last-header=s" => \$opt_last_header,
	   ) or exit 1;
usage unless @ARGV;


use MIME::Parser;
use Chj::xopen 'xopen_read';
use Chj::singlequote;

my $parser = new MIME::Parser;
$parser->output_under("/tmp");# IMPORTANT! or it will put them to cwd.

sub parsemsg {
    my ($fh)=@_;
    my $ent= $parser->parse($fh);
    #use Data::Dumper;
    #print Dumper $ent;
    $ent
}

usage "don't give both -h and --last-header" if $opt_h && $opt_last_header;
my $search_header= $opt_h || $opt_last_header;

if (@ARGV) {
    for(@ARGV) {
	print "File ".singlequote($_).":\n";
	my $f=xopen_read $_;
	my $ent=parsemsg($f);
	##unfinished:
	if ($search_header) {
	    #show header
	    my $head=$ent->head;
	    my @vals= $head->get($search_header);
	    if (@vals==0) {
		print "no such header ".singlequote($opt_h)."\n";
	    } else {
		if ($opt_last_header) {
		    print $vals[-1];
		} else {
		    if(@vals==1){
			print "one such header ".singlequote($opt_h).": ".singlequote($vals[0])."\n";
		    } else {
			my $i=0;
			for(@vals){
			    print "$i. header ".singlequote($opt_h).": ".singlequote($_)."\n";
			    $i++;
			}
		    }
		}
	    }
	}else {
	    die "unknown command requested <--- unfinished";
	}
    }
}
else {
    parsemsg(*STDIN{IO});
}

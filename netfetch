#!/bin/bash 

set -eu

if [ $# -lt 1 -o "$1" = "-h" -o "$1" = "--help" ]; then
    echo "$0 [-z] server port"
    echo "  then needs the pw on stdin."
    echo "  -> See netoffer."
    exit 1
fi

z=""
if [ "$1" = "-z" ]; then
    z="-z "; shift
elif [ "$1" = "--" ]; then
    shift
fi

SERVER="$1"
PORT="$2"


# Netcat is an utterly broken API: traditional netcat and nc.openbsd
# don't share a common set of options to work correctly as a client
# that copies all data from the server regardless of its own stdin,
# thus need to differentiate this way:

have () {
    which "$1" > /dev/null
}

if have nc.traditional; then
    NETCAT_CLIENT="nc.traditional"
elif have nc.openbsd; then
    # nc.openbsd neither works without -q option nor supports -q-1,
    # nor does -q0 mean infinite, thus need to use a big enough number
    # of seconds
    NETCAT_CLIENT="nc.openbsd -q999999999"
else
    echo "can't find either nc.traditional or nc.openbsd" >&2
    exit 1
fi



# pw needs to be on stdin, tty won't work because the parent shell
# would over-read from it.


# http://wiki.bash-hackers.org/syntax/redirection
# "Avoid referencing file descriptors above 9, since you may collide
# with file descriptors Bash uses internally."

{
$NETCAT_CLIENT "$SERVER" "$PORT" < /dev/null \
    | gpg -q -d --batch --passphrase-fd 9 \
    | tar x ${z}-f -
} 9<&0


#!/usr/bin/perl -w

# Thu Jun  5 15:08:27 CEST 2008
(my $email='XXX%YYY,ch')=~ tr/%,/@./;

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname branchname

  Create that branch and switch to it. right?.
  Well, actually just change the HEAD pointer reference, that's all.
   Well, should probably somehow remember that thing in git-reflog, hum, how?
  (also this doesn't care about the index (neither other things) at all)

  Actually, should rather call this cj-git-force-switch-branch or so.
  It's nothing about *creating* anything. Or necessarily anything about *new*.
   Nor about emptyness.

  So,  DANGER be careful...

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   ) or exit 1;
usage unless @ARGV==1;

our ($newbranchname)=@ARGV;

use Chj::xperlfunc;

xxsystem "git","symbolic-ref","-m",$myname,"HEAD","refs/heads/$newbranchname";

use Chj::Git::Functions 'maybe_git_rev_parse';
use Chj::IO::Command;

if (my $commit= maybe_git_rev_parse "HEAD") {
    print "reading index from HEAD commit $commit\n";
    xxsystem "git","read-tree","HEAD";
} else {
    print "initializing empty index\n";
    my $out= Chj::IO::Command->new_receiver
      ("git","update-index","--index-info");
    $out->xxfinish;
    #xxsystem   then what to read in  something new ?
}


#use Chj::ruse;
#use Chj::Backtrace; use Chj::repl; repl;

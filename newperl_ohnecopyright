#!/bin/sh

if [ ! "$EDITOR" ]; then
    EDITOR=e
fi

if test -e "$1"; then
    if [ -f "$1" ]; then
	echo "File $1 existiert bereits!" >&2
	$EDITOR "$1"
    else
	echo "Item $1 existiert bereits und ist kein File." >&2
	exit 1
    fi
else
	cat <<'END' > "$1"
#!/usr/bin/perl -w

END
	echo -n '# ' >> "$1"
	date >> "$1"
	moddedmail="`perl -we '$v= ($ENV{EMAIL} || "XXX\@YYY.ch"); $v=~ tr/@./%,/; print $v'`"
	echo '(my $email='\'"$moddedmail"\'')=~ tr/%,/@./;' >> "$1"
	cat <<'END' >> "$1"

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname ..

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

END
	if false; then
	    # old style
	    cat <<'END' >> "$1"
my @args;
my $DEBUG=0;
for (my $i=0; $i<=$#ARGV; $i++) {
    local $_=$ARGV[$i];
    if (/^--?h(elp)?$/) {
    	usage
    } elsif ($_ eq '--') {
    	push @args, @ARGV[$i+1..$#ARGV];
    	last;
    } elsif (/^--?d(ebug)?$/) {
	$DEBUG=1;
#     } elsif (/^--?X(?:XXX(?:=(.*))?)?$/) {
#         if (defined $1) {
#             $XXX=$1
#         } else {
#             $XXX=$ARGV[++$i] or usage "missing argument for '$_' option";
#         }
    } elsif (/^-./) {
    	usage("Unknown option '$_'\n");
    } else {
    	push @args, $_
    }
}
usage unless @args;

END
	else
	    # finally use Getopt
	    cat <<'END' >> "$1"
use Getopt::Long;
our $verbose=0;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   ) or exit 1;
usage unless @ARGV;

#use Chj::ruse;
#use Chj::Backtrace; use Chj::repl; repl;
END
	fi
	chmod +x "$1"
	$EDITOR "$1"
fi

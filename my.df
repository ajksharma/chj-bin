#!/usr/bin/perl -w

# Mon Nov  4 17:16:26 GMT 2013
(my $email='ch%christianjaeger,ch')=~ tr/%,/@./;

use strict;

# A "df" that shows the correct mountpoints when run without an
# argument even if run chrooted.

# I still wonder why /proc/mounts, which is meant to be used as
# symlink target for /etc/mtab, doesn't work usefully for chroots,
# while /proc/self/mountinfo does have the correct information but not
# the right format.


use Chj::xopen 'xopen_read';


# XX move to library?

{
    package CHJ::Mount;
    sub dev { my $s=shift; $$s[0] }
    sub mountpoint { my $s=shift; $$s[1] }
    sub type { my $s=shift; $$s[2] }
    sub options { my $s=shift; $$s[3] }
    sub fsck { my $s=shift; $$s[4] }
    sub fsck_order { my $s=shift; $$s[5] }
}

sub mounts {
    my $f= xopen_read "/proc/mounts";
    my @m;
    while (<$f>) {
	my @f= split " ";
	@f == 6 or die "line in /proc/mounts with different number of fields";
	push @m, bless \@f, "CHJ::Mount";
    }
    $f->xclose;
    @m
}

{
    package CHJ::Mountinfo;
    our @fields=qw(dunno1 dunno2 inode from mountpoint options
		   dunno3 type1 type2 moreoptions);
    my $i=0;
    for (@fields) {
	no strict 'refs';
	my $idx= $i;
	*$_= sub { my $s=shift; $$s[$idx] };
	$i++
    }
}

sub mountinfos {
    my $path= "/proc/self/mountinfo";
    my $f= xopen_read $path;
    my @m;
    while (<$f>) {
	my @f= split " ";
	@f == @CHJ::Mountinfo::fields
	  or die "line in $path with different number of fields: '$_'";
	push @m, bless \@f, "CHJ::Mountinfo";
    }
    $f->xclose;
    @m
}

# /library

sub mountpoints {
    map { $_->mountpoint } mountinfos
}

if (@ARGV) {
    exec "df", @ARGV;
} else {
    exec "df", "--", mountpoints;
}

#use Chj::ruse;
#use Chj::Backtrace; use Chj::repl; repl;

#!/usr/bin/perl -w

# Fre Nov 19 21:59:21 MET 2004
(my $email='christian%jaeger,mine,nu')=~ tr/%,/@./;

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname item(s)

  this is rene, your file/folder renaming tool. it has lost it's trailing e
  becaus it was deamed to loong.
  interactively asks for the new name of each of them.

  (Christian Jaeger <$email>)
";
exit @_ ? 1 : 0;
}

use Getopt::Long;
our $DEBUG=0;
our $opt_print_only;
GetOptions("d|debug"=> \$DEBUG,
	   "help"=> sub{usage},
	   "print-only"=> \$opt_print_only,
	  ) or exit 1;
usage unless @ARGV;

use Chj::xperlfunc qw(xrename xlinkunlink);
use Term::ReadLine;
my $rl= Term::ReadLine->new("rename");

$rl->ornaments(0);

sub ren {
    my ($path)=@_;

    lstat $path or die "'$path': $!";
    my $path_is_d= -d _;

    $path=~ s|/+\z||s;
    #^ + ist wichtig!
    my ($folder,$filename)= $path=~ m|(.*?)([^/]+)\z|s
      or die "given empty path";
    #print "fol=$folder, fn=$filename\n";
    #(# well, . und .. wär noch eventualkritisch.  ?)

    my $newname= $filename;
  REDO: {
	if (defined($newname= $rl->readline("rename: ",$newname))){
	    if (length($newname)) {
		if ($newname ne $filename) {
		    my $newpath= "$folder$newname";
		    #print "newpath='$newpath'\n";
		    if (lstat $newpath) {
			die "target exists - unfinished, ask user here";###unfini
			if(!1){
			    return
			}
		    }
		    eval {
			if ($opt_print_only) {
			    print $newpath."\n";
			} else {
			    if ($path_is_d) {
				xrename $path,$newpath;
			    } else {
				# be unrisky to race conds
				xlinkunlink $path,$newpath;
			    }
			}
		    };
		    my $e=$@;
		    if (ref $e or $e) {
			if ($e=~ /too long/) {
			    print "$e";
			    redo REDO;
			} else {
			    die $e
			}
		    }
		}
	    }
	}
    }
}

sub _ren {
    eval {
	&ren
    };
    if ($@) {
	my $e=$@;
	$e=~ s/ at \S.* line \d+.{1,2}$//s;#warum geht $ aber nicht \z ah logo.
	chomp $e;
	print STDERR "$e\n";
    }
}

_ren $_ for @ARGV;


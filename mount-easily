#!/usr/bin/perl -w

# Mon Apr 27 15:33:14 EDT 2009
(my $email='XXX%YYY,ch')=~ tr/%,/@./;

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname device

  Automatically turns the device path into a mount path and mounts the
  device on that path. Errors out when something is mounted on the
  choosen path already.

  Options:
  -c|--create-dir  create mount path [if it doesn't exist already]
  --ro|--readonly
  [--noatime wll use as default anyway ok?]

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
#our @mountoptions=(); ehr no,
our $mountoptions= {};
our $opt_createdir;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   "ro|readonly"=> sub {
	       $$mountoptions{ro}=1;
	   },
	   "noatime"=> sub {
	       $$mountoptions{noatime}=1;
	   },
	   "c|create-dir"=> \$opt_createdir,
	   ) or exit 1;
usage unless @ARGV==1;

use Chj::Unix::Mount 'mounted','mount';
use Chj::xperlfunc qw(xmkdir basename dirname);
sub mydie { #forever
    die "$myname: @_\n";#hm or join  ?.  a forever-*question*
}

sub mount_easily {
    my ($device_path)=@_;
    #my $dir= dirname $device_path;###  how to use it ?. notatalll ?
    my $dest_path=  "/mnt/".basename $device_path; ###
    my $mount= sub {
	my $options= join(",", keys %$mountoptions);
	mount( (length $options ? ("-o",$options) : ()), $device_path, $dest_path);
    };
    if (-e $dest_path) {
	if (mounted $dest_path) {
	    mydie "there is already something mounted on '$dest_path'";
	} else {
	    &$mount;
	}
    } else {
	if ($opt_createdir) {
	    #or ask for it  ? wl or no, just rerun program then.with the option.
	    xmkdir $dest_path;
	    &$mount;
	} else {
	    mydie "target dir '$dest_path' does not exist and --create-dir option not given"
	}
    }
}

mount_easily $_ for @ARGV;

#use Chj::ruse;
#use Chj::Backtrace; use Chj::repl; repl;

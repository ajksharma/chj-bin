#!/usr/bin/perl -w

use strict;
$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);

# symlink based argument processing:
our $run_if_empty;

{
    my $name= $myname;
    $name=~ s/^([^-]+)// or die "I'm given an in valid name '$myname'";
    #my $onlyname= $1;
    if ($name) {
	my $optionpart=$name;
	if ($name=~ s/-run-if-empty//) {
	    $run_if_empty=1;
	}
	#if ($name=~ s/-oneinvocation//) {
	# well, we'll assume this always anyway, right? why not.
	if ($name) {
	    die "don't understand option part '$optionpart'";
	}
    }
}

use Chj::App::Myxargs qw(options_and_cmd myxargs);

my $options_and_cmd= options_and_cmd();
if (defined $run_if_empty
    or # more importantly, sgh waah,
    ! defined($$options_and_cmd[0]{"no-run-if-empty"})
   ) {
    $$options_and_cmd[0]{"no-run-if-empty"}= !$run_if_empty;
}
#use Data::Dumper; print Dumper $options_and_cmd;
myxargs $options_and_cmd;


#uff. actually twice wrong: (1) better feed default value just to options() first. not after. (2) actually we do not want option processing after all!!!! thatwas the whole point of this file and keepin g that backward compatible.

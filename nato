#!/usr/bin/perl -w

# Wed Apr 30 15:33:56 BST 2014
(my $email='XXX%YYY,ch')=~ tr/%,/@./;

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname [string(s)]

  Translate string(s) to list of NATO phonetic alphabet entities.

  Read from stdin if no arguments given.

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
#our $opt_dry;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   #"dry-run"=> \$opt_dry,
	   ) or exit 1;
#usage unless @ARGV;

our $tbl=
  +{
    a=> "Alfa",
    b=> "Bravo",
    c=> "Charlie",
    d=> "Delta",
    e=> "Echo",
    f=> "Foxtrot",
    g=> "Golf",
    h=> "Hotel",
    i=> "India",
    j=> "Juliett",
    k=> "Kilo",
    l=> "Lima",
    m=> "Mike",
    n=> "November",
    o=> "Oscar",
    p=> "Papa",
    q=> "Quebec",
    r=> "Romeo",
    s=> "Sierra",
    t=> "Tango",
    u=> "Uniform",
    v=> "Victor",
    w=> "Whiskey",
    x=> "X-ray",
    y=> "Yankee",
    z=> "Zulu",
    "-"=> "Dash",
   };

sub say ($) {
    my ($str)=@_;
    my $pos=0;
    while ($str=~ m/(.)(.|$)/sgc) {
	# ALWAYS forget: can't take those from above since that would
	# break /c (get all in one huge list I guess)
	my ($c,$next)=($1,$2);
	if (defined (my $word= $$tbl{lc $c})) {
	    print "$word ";
	} else {
	    print
	      (do {
		  if ($c eq ".") {
		      if ($next and $next=~ /\S/) {
			  "Point"
		      } else {
			  "Stop"
		      }
		  } elsif ($c eq " ") {
		      ""
		  } else {
		      $c
		  }
	       },
	       " ");
	}
	pos($str)= ++$pos;
    }
    print "\n";
}

if (@ARGV) {
    say $_ for @ARGV
} else {
    while (<>) {
	say $_
    }
}

#use Chj::ruse;
#use Chj::Backtrace; use Chj::repl; repl;

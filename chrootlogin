#!/usr/bin/perl -w

# Wed Dec 23 18:38:22 CET 2009
(my $email='XXX%YYY,ch')=~ tr/%,/@./;

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname chrootbase user

  Options:
  -X  give access to X server

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
#our $opt_dry;
our $opt_X;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   #"dry-run"=> \$opt_dry,
	   "X"=> \$opt_X,
	  ) or exit 1;
usage unless @ARGV==2;

our ($chrootbase,$user)=@ARGV;

use Chj::Unix::Mount 'mount_if_not_already','mounted','mount';

mount_if_not_already qw(-t proc proc), "$chrootbase/proc";
mount_if_not_already qw(-t usbfs usbfs), "$chrootbase/proc/bus/usb";

mount_if_not_already qw(-t sysfs sysfs), "$chrootbase/sys";
#mount_if_not_already qw(-t ), "$chrootbase/dev"; well no. k ?. start devfs instead.
my $devfs_is_initialized= mounted "$chrootbase/dev";

#sub chroot {
#    "chroot", $chrootbase, "su", "-", $user;
#} and add args. but also goto. well . so is es   manually.


use Chj::xperlfunc;

if (not $devfs_is_initialized) {
    #    xsystem "chroot", $chrootbase, #actually gar kein su needed 'heh'x
    #      "/etc/init.d/udev", "start";
    #actually that's not even installed after debootstrap. and maybe I don't want it to scan all my devices twice, really, yes really.
    #just bind mount it
    mount "--bind", "/dev", "$chrootbase/dev";
    mount "--bind", "/dev/pts", "$chrootbase/dev/pts";
}

mount_if_not_already qw(-t tmpfs -o), 'nosuid,relatime,mode=755', #against "Possible attempt to separate words with commas" warning gr.
  "tmpfs","$chrootbase/lib/init/rw";

my $X= ($opt_X and $ENV{DISPLAY});

use Chj::xopen 'xopen_read';
use Chj::xtmpfile;
# XXX: ignores any XAUTHORITY(?) env var setting.
my $Xauth= $X ? xopen_read("$ENV{HOME}/.Xauthority")->xcontent : undef;

#ps jo warum machen die nid nur env var verwendung "btw ??" h erlaubt mir zu rm aber ?.war das der grund?

#how write the file. chroot and su in perl script would be most logically.senseful.foo.
if ($X) {
    if (xfork) {
	xxwait;
    } else {
	xchroot $chrootbase;
	my
	  ($name,$passwd,$uid,$gid,
	   $quota,$comment,$gcos,$dir,$shell,$expire) = getpwnam $user
	     or die "could not look up user '$user'";
	xchdir $dir;
	#oh, don't forget the setuid stuff...
	$( = $gid; $) = $gid;
	$< = $uid; $> = $uid;
	#or die? how ?  and  does it delete the secondary groups?
	my $f= xtmpfile ".Xauthority";
	$f->xprint($Xauth);
	$f->xclose;
	$f->xputback(0600);
	exit 0;
    }
}


#use Chj::Unix::User;
#hm. really? or not?

xexec "chroot", $chrootbase, "su", "-", $user;


#use Chj::ruse;
#use Chj::Backtrace; use Chj::repl; repl;

#!/usr/bin/perl -w

# Wed Dec 23 18:38:22 CET 2009
# Released into the public domain

(my $email='chrjae%gmail,com')=~ tr/%,/@./;

use strict;

our $timeout_untrusted=60;
our $timeout_trusted=0;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname chrootbase user [ cmd [arguments] ]

  Options:
  -X  give access to X server
  --untrusted  give untrusted X connection only (default: trusted)
  --timeout n  timeout for the X authority
               (instead of $timeout_trusted or $timeout_untrusted for trusted/untrusted)

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
#our $opt_dry;
our $opt_X;
our $opt_untrusted;
our $opt_timeout;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   #"dry-run"=> \$opt_dry,
	   "X"=> \$opt_X,
	   "untrusted"=>\$opt_untrusted,
	   "timeout=n"=>\$opt_timeout,
	  ) or exit 1;
usage unless @ARGV>=2;

our ($chrootbase,$user,@cmd)=@ARGV;

use Chj::xperlfunc;
use Chj::xopen 'xopen_read';
use Chj::xtmpfile;
use Chj::xtmpdir;

my $X= ($opt_X and $ENV{DISPLAY});

use Chj::Trace;

my $Xauth= do {
    if ($X) {
	my $d= xtmpdir;
	{
	    my $t= xtmpfile "$d/something";
	    xxsystem
	      ( "xauth","-f",$t->path,"generate",$ENV{DISPLAY},".",
		($opt_untrusted ? "untrusted" : "trusted"),
		"timeout", (defined($opt_timeout) ? $opt_timeout :
			    ($opt_untrusted ? $timeout_untrusted : $timeout_trusted)),
	      );
	    # this replaced "$t", so reopen it:
	    # (but relying on $t not going out of scope yet)
	    my $t2= xopen_read $t->path; # "$t" does *not* work, unlike "$d"
	    $t2->xcontent
	}
    } else {
	undef
    }
};

use Chj::Unix::Mount 'mount_if_not_already','mounted','mount';

mount_if_not_already qw(-t proc proc), "$chrootbase/proc";
mount_if_not_already qw(-t usbfs usbfs), "$chrootbase/proc/bus/usb";

mount_if_not_already qw(-t sysfs sysfs), "$chrootbase/sys";

my $devfs_is_initialized= mounted "$chrootbase/dev";

if (not $devfs_is_initialized) {
    mount "--bind", "/dev", "$chrootbase/dev";
    mount "--bind", "/dev/pts", "$chrootbase/dev/pts";
}

mount_if_not_already qw(-t tmpfs -o), 'nosuid,relatime,mode=755',
  "tmpfs","$chrootbase/lib/init/rw";


if ($X) {
    if (xfork) {
	xxwait;
    } else {
	xchroot $chrootbase;
	my
	  ($name,$passwd,$uid,$gid,
	   $quota,$comment,$gcos,$dir,$shell,$expire) = getpwnam $user
	     or die "could not look up user '$user'";
	xchdir $dir;
	$( = $gid; $) = $gid;
	$< = $uid; $> = $uid;
	#or die? how ?  and  does it delete the secondary groups?
	my $f= xtmpfile ".Xauthority";
	$f->xprint($Xauth);
	$f->xclose;
	$f->xputback(0600);
	exit 0;
    }
}

xexec "chroot", $chrootbase, "su", "-", $user, @cmd;


#use Chj::ruse;
#use Chj::Backtrace; use Chj::repl; repl;

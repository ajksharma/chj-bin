#!/usr/bin/perl -w

use strict;

# invoke gpg with all the keyrings that Debian (as of >etch) provides.

# By giving a comma separated list of numbers you can choose which
# ones to take; by default all of them are taken.

my @indexes= do {
    if (@ARGV) {
	my $first= $ARGV[0];
	if ($first=~ /^(?:\d+,)*\d+\z/) {
	    shift @ARGV;
	    split /,/,$first
	} else {
	    ()
	}
    } else {
	()
    }
};


my @debian_keyrings=
  (
   ["debian-maintainers"=> "/usr/share/keyrings/debian-maintainers.gpg"],
   ["debian-keyring"=> "/usr/share/keyrings/debian-keyring.gpg"],
   ["debian-keyring"=> "/usr/share/keyrings/debian-role-keys.gpg"],
   ["debian-keyring"=> "/usr/share/keyrings/debian-keyring.pgp"],
  );

if (@indexes) {
    @debian_keyrings= @debian_keyrings[@indexes];
    use Data::Dumper;
    print "taking keys:\n".Dumper(\@debian_keyrings);
}


use Chj::xperlfunc ':all';
use Chj::xhome;

sub path2copypath {
    my ($path)=@_;
    my $fn= basename $path;
    xhome . "/.gnupg/".$fn
}

sub copy {
    my ($from,$to,$exists)=@_;
    if ($exists) {
	xrename $to, $to."~";
    }
    xxsystem "cp","--",$from,$to
}

for (@debian_keyrings) {
    my ($pack,$path)=@$_;
    -r $path
      or die "can't read keyring '$path': $!; please apt-get install $pack";
    my $cpath= path2copypath $path;
    my $a= xstat $path;
    if (my $b= Xlstat $cpath) {
	$b->is_file or die "exists but is not a file: '$cpath'";
	if ($a->mtime > $b->mtime
	    or
	    $a->ctime > $b->ctime) {
	    copy ($path,$cpath,1)
	}
    } else {
	copy ($path,$cpath,0)
    }
}

xexec(
     "gpg",
     (
      map {
	  my ($pack,$path)=@$_;
	  ("--keyring", path2copypath($path))
      } @debian_keyrings
     ),
     @ARGV
    );


#!/usr/bin/perl -w

# Sun May 11 00:49:10 CEST 2008
(my $email='XXX%YYY,ch')=~ tr/%,/@./;

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname on|off|single [| status ]

  HACK to switch off core(s) to avoid swap+encryptedswap+nvidiaXserver
  or so hang problem complex when swapping.


  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   ) or exit 1;
usage unless @ARGV<=1;

our ($cmd)= @ARGV ? @ARGV : "status";

our @othercores= "/sys/devices/system/cpu/cpu1/online";
## todo better fore more than dual cores.

use Chj::Fileutil ":all";


our $mkswitch=sub {
    my ($on)=@_; #ein super Fall wo "?" wirklich passen würde. nicht p. he. !!
    sub {
	my $msg= $on ? "1\n" : "0\n";
	for my $f (@othercores) {
	    MsgfileWrite ($f,$msg,""); # do not end with \0
	}
    }
};

our $on= &$mkswitch (1);
our $off= &$mkswitch (1);

our $status= sub {
    my $tot=1;
    for my $f (@othercores) {
	my $n= MsgfileRead $f,"";# do not expect a \0 (sigh.. wrong funcs)
	chomp $n;
	$tot+= $n ? 1 : 0;
    }
    print "number of active cpu's: $tot\n" or die;#xprint?...
};

our $cmds=
  {
   on=> $on,
   off=> $off,
   single=> $off,
   status=> $status,
  }
;

my $c= $$cmds{$cmd} or usage "unknown command '$cmd'";

&$c;


#use Chj::ruse;
#use Chj::Backtrace; use Chj::repl; repl;

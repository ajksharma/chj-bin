#!/usr/bin/perl -w

# Mit Feb 13 13:35:53 CET 2008
(my $email='chrjae%gmail,com')=~ tr/%,/@./;

use strict;

our $timeout=10;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname socketpath [ arguments ]

  Send a trigger message to a trigger-listen instance.  If arguments
  are given, those are sent with the message, but trigger-listen must
  have been started with --accept-arguments in this case or it will
  ignore the message.

  Options:
  --timeout seconds   instead of the default $timeout
  --inet       Interpret socketpath as listen address[:port] instead of
               filesystem path

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
our $opt_inet;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   "timeout"=> \$timeout,
	   "inet"=>\$opt_inet,
	  ) or exit 1;
usage unless @ARGV;

our $socketpath= shift @ARGV;

our $IO_Socket_class= $opt_inet ? "IO::Socket::INET" : "IO::Socket::UNIX";
use Chj::load;
load $IO_Socket_class; import $IO_Socket_class;


$SIG{ALRM}= sub {
    die "$myname on '$socketpath': timed out\n";
};
alarm $timeout;

our $socket= $IO_Socket_class->new
  (
   Type=> &SOCK_STREAM,
   $opt_inet ? (Proto=> "tcp") : (),
   #(Listen=> 0),
   #($opt_inet ? "PeerAddr" : "Peer"), $socketpath,
  )
  or die "opening socket '$socketpath': $!";#!

use Chj::schemestring 'schemestring_oneline';

#ach DAS nicht gvergessen!:
if ($opt_inet) {
    # usage: $sock->connect(NAME) or $sock->connect(PORT, ADDR) at /opt/chj/bin/trigger-send line 66
    $socket->connect ($socketpath)
      or die "connect: $!";
    #connect: Transport endpoint is already connected at /opt/chj/bin/trigger-send line 67.
    #GOFP WAS DANN?
}

#warn "START";
$socket->send(@ARGV ?
	      "trigger: ".join("\t",map { schemestring_oneline $_ } @ARGV)."\n"
	      :
	      "trigger\n")
  or do {
      #warn "DED";  ach kommt EH nicht hierhin? throws exception schon selber???
      die "send: $!";
      };
my $result= <$socket>;
if ($result ne "ok\n") {
    die "$myname: did not get an ok from the server, but: $result";
}
$socket->close
  or die "close: $!";


#!/usr/bin/perl -w

# Fre Jan  9 18:23:49 MET 2004
(my $email='pflanze%gmx,ch')=~ tr/%,/@./;

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?"; 
my ($mydir, $myname)=($1,$2); 
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname pid(s)
  Print start_time of the given processes in human readable format.

  (Christian Jaeger <$email>)
";
exit @_ ? 1 : 0;
}

my @args;
my $DEBUG=0;
for (my $i=0; $i<=$#ARGV; $i++) {
    local $_=$ARGV[$i];
    if (/^--?h(elp)?$/) {
    	usage
    } elsif ($_ eq '--') {
    	push @args, @ARGV[$i+1..$#ARGV];
    	last;
    } elsif (/^--?d(ebug)?$/) {
	$DEBUG=1;
#     } elsif (/^--?X(?:XXX(?:=(.*))?)?$/) {
#         if (defined $1) {
#             $XXX=$1
#         } else {
#             $XXX=$ARGV[++$i] or usage "missing argument for '$_' option";
#         }
    } elsif (/^-./) {
    	usage("Unknown option '$_'\n");
    } else {
    	push @args, $_
    }
}
usage unless @args;

use Chj::xopen 'xopen_read';

# current time and uptime?
my $cur_uptime= (split / +/,(xopen_read "/proc/uptime")->xcontent)[0] * 100;
my $cur_time=time;
my $start_time= $cur_time-($cur_uptime/100);
print "system was started at ".localtime($start_time)." (kooomisch, modulo sleeps undoderso)\n";

for my $pid (@args) {
    my $c=xopen_read("/proc/$pid/stat")->xcontent;
    my $start_uptime= (split / +/,$c)[21];
    #my $start_uptime= $cur_uptime - $start_time;
    print "process $pid was started ".localtime($start_time+$start_uptime/100)."\n";
}
